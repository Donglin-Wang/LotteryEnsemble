from experiment import build_args, run_experiments
from client import Client
from server import Server
from genesis import ClientGenesis, ServerGenesis
import torch, numpy as np
torch.manual_seed(0)
np.random.seed(0)

if __name__ == '__main__':
    overrides = {
        'log_folder': './weights',
        'running_on_cloud': False
    }

    data_split = 'non-iid'
    num_rounds = 400
    num_local_epoch = 10
    num_clients = 400
    batch_size = 10
    rate_unbalance = 1
    n_samples = 20
    n_class = 2

    experiments = {
        'baseline_5_c_per_round':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic='standalone',
                       num_clients=400,
                       comm_rounds=400,
                       frac=0.0125,
                       prune_step=0.0,
                       prune_percent=2,
                       acc_thresh=2,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'baseline_10_c_per_round':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic='standalone',
                       num_clients=400,
                       comm_rounds=400,
                       frac=0.025,
                       prune_step=0.0,
                       prune_percent=2,
                       acc_thresh=2,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'baseline_20_c_per_round':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic='standalone',
                       num_clients=400,
                       comm_rounds=400,
                       frac=0.05,
                       prune_step=0.0,
                       prune_percent=2,
                       acc_thresh=2,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'fed_avg_5_c_per_round':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic=None,
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.0125,
                       prune_step=0.0,
                       prune_percent=2,
                       acc_thresh=2,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'fed_avg_10_c_per_round':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic=None,
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.025,
                       prune_step=0.0,
                       prune_percent=2,
                       acc_thresh=2,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'fed_avg_20_c_per_round':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic=None,
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.05,
                       prune_step=0.0,
                       prune_percent=2,
                       acc_thresh=2,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'lottery_fl_5_c_per_round_0.9_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic=None,
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.0125,
                       prune_step=0.2,
                       prune_percent=0.9,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'lottery_fl_10_c_per_round_0.9_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic=None,
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.025,
                       prune_step=0.2,
                       prune_percent=0.9,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'lottery_fl_20_c_per_round_0.9_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic=None,
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.05,
                       prune_step=0.2,
                       prune_percent=0.9,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'lottery_fl_5_c_per_round_0.5_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic=None,
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.0125,
                       prune_step=0.2,
                       prune_percent=0.5,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'lottery_fl_10_c_per_round_0.5_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic=None,
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.025,
                       prune_step=0.2,
                       prune_percent=0.5,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'lottery_fl_20_c_per_round_0.5_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic=None,
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.05,
                       prune_step=0.2,
                       prune_percent=0.5,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'lottery_fl_5_c_per_round_0.3_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic=None,
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.0125,
                       prune_step=0.2,
                       prune_percent=0.3,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'lottery_fl_10_c_per_round_0.3_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic=None,
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.025,
                       prune_step=0.2,
                       prune_percent=0.3,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'lottery_fl_20_c_per_round_0.3_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic=None,
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.05,
                       prune_step=0.2,
                       prune_percent=0.3,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        ##########################
        ### LOTTERY FL AVG V2 ###########
        ##########################
        'lottery_fl_v2_5_c_per_round_0.9_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic='lottery_fl_v2',
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.0125,
                       prune_step=0.2,
                       prune_percent=0.9,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'lottery_fl_v2_10_c_per_round_0.9_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic='lottery_fl_v2',
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.025,
                       prune_step=0.2,
                       prune_percent=0.9,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'lottery_fl_v2_20_c_per_round_0.9_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic='lottery_fl_v2',
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.05,
                       prune_step=0.2,
                       prune_percent=0.9,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'lottery_fl_v2_5_c_per_round_0.5_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic='lottery_fl_v2',
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.0125,
                       prune_step=0.2,
                       prune_percent=0.5,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'lottery_fl_v2_10_c_per_round_0.5_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic='lottery_fl_v2',
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.025,
                       prune_step=0.2,
                       prune_percent=0.5,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'lottery_fl_v2_20_c_per_round_0.5_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic='lottery_fl_v2',
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.05,
                       prune_step=0.2,
                       prune_percent=0.5,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'lottery_fl_v2_5_c_per_round_0.3_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic='lottery_fl_v2',
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.0125,
                       prune_step=0.2,
                       prune_percent=0.3,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'lottery_fl_v2_10_c_per_round_0.3_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic='lottery_fl_v2',
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.025,
                       prune_step=0.2,
                       prune_percent=0.3,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'lottery_fl_v2_20_c_per_round_0.3_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic='lottery_fl_v2',
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.05,
                       prune_step=0.2,
                       prune_percent=0.3,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        ##########################
        ### LOTTERY FL AVG V3 ###########
        ##########################
        'lottery_fl_v3_5_c_per_round_0.9_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic='lottery_fl_v3',
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.0125,
                       prune_step=0.2,
                       prune_percent=0.9,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'lottery_fl_v3_10_c_per_round_0.9_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic='lottery_fl_v3',
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.025,
                       prune_step=0.2,
                       prune_percent=0.9,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'lottery_fl_v3_20_c_per_round_0.9_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic='lottery_fl_v3',
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.05,
                       prune_step=0.2,
                       prune_percent=0.9,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'lottery_fl_v3_5_c_per_round_0.5_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic='lottery_fl_v3',
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.0125,
                       prune_step=0.2,
                       prune_percent=0.5,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'lottery_fl_v3_10_c_per_round_0.5_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic='lottery_fl_v3',
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.025,
                       prune_step=0.2,
                       prune_percent=0.5,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'lottery_fl_v3_20_c_per_round_0.5_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic='lottery_fl_v3',
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.05,
                       prune_step=0.2,
                       prune_percent=0.5,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'lottery_fl_v3_5_c_per_round_0.3_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic='lottery_fl_v3',
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.0125,
                       prune_step=0.2,
                       prune_percent=0.3,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'lottery_fl_v3_10_c_per_round_0.3_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic='lottery_fl_v3',
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.025,
                       prune_step=0.2,
                       prune_percent=0.3,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'lottery_fl_v3_20_c_per_round_0.3_thresh':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic='lottery_fl_v3',
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.05,
                       prune_step=0.2,
                       prune_percent=0.3,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'genesis_5_c_per_round_pp_0.3':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split='non-iid',
                       client=ClientGenesis,
                       server=ServerGenesis,
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.0125,
                       prune_step=0.1,
                       prune_percent=0.3,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'genesis_5_c_per_round_pp_0.5':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split='non-iid',
                       client=ClientGenesis,
                       server=ServerGenesis,
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.0125,
                       prune_step=0.1,
                       prune_percent=0.5,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'genesis_5_c_per_round_pp_0.7':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split='non-iid',
                       client=ClientGenesis,
                       server=ServerGenesis,
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.0125,
                       prune_step=0.1,
                       prune_percent=0.7,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'genesis_5_c_per_round_pp_0.9':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split='non-iid',
                       client=ClientGenesis,
                       server=ServerGenesis,
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.0125,
                       prune_step=0.1,
                       prune_percent=0.9,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'genesis_10_c_per_round_pp_0.3':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split='non-iid',
                       client=ClientGenesis,
                       server=ServerGenesis,
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.025,
                       prune_step=0.1,
                       prune_percent=0.3,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'genesis_10_c_per_round_pp_0.5':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split='non-iid',
                       client=ClientGenesis,
                       server=ServerGenesis,
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.025,
                       prune_step=0.1,
                       prune_percent=0.5,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'genesis_10_c_per_round_pp_0.7':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split='non-iid',
                       client=ClientGenesis,
                       server=ServerGenesis,
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.025,
                       prune_step=0.1,
                       prune_percent=0.7,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'genesis_10_c_per_round_pp_0.9':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split='non-iid',
                       client=ClientGenesis,
                       server=ServerGenesis,
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.025,
                       prune_step=0.1,
                       prune_percent=0.9,
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'genesis_20_c_per_round_pp_0.3':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split='non-iid',
                       client=ClientGenesis,
                       server=ServerGenesis,
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.05,
                       prune_step=0.1,
                       prune_percent=0.3,  # 0.3, 0.5, 0.7, 0.9  -----
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'genesis_20_c_per_round_pp_0.5':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split='non-iid',
                       client=ClientGenesis,
                       server=ServerGenesis,
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.05,
                       prune_step=0.1,
                       prune_percent=0.5,  # 0.3, 0.5, 0.7, 0.9  -----
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'genesis_20_c_per_round_pp_0.7':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split='non-iid',
                       client=ClientGenesis,
                       server=ServerGenesis,
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.05,
                       prune_step=0.1,
                       prune_percent=0.7,  # 0.3, 0.5, 0.7, 0.9  -----
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        'genesis_20_c_per_round_pp_0.9':  # this key determines the output folder name under log_folder
            build_args(arch='mlp',
                       dataset='mnist',
                       data_split='non-iid',
                       client=ClientGenesis,
                       server=ServerGenesis,
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.05,
                       prune_step=0.1,
                       prune_percent=0.9,  # 0.3, 0.5, 0.7, 0.9  -----
                       acc_thresh=0.5,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
            # This is to test the cifar data splitter..
        'fed_avg_5_c_per_round_cifar':  # this key determines the output folder name under log_folder
            build_args(arch='cnn',
                       dataset='cifar10',
                       data_split=data_split,
                       client=Client,
                       server=Server,
                       avg_logic=None,
                       num_clients=num_clients,
                       comm_rounds=num_rounds,
                       frac=0.0125,
                       prune_step=0.0,
                       prune_percent=2,
                       acc_thresh=2,
                       client_epoch=num_local_epoch,
                       batch_size=batch_size,
                       lr=0.001,
                       rate_unbalance=rate_unbalance,
                       n_samples=n_samples,
                       n_class=n_class),
        # !!! NOTE: This experiment still uses the old style specification. Adjust to resemble an earlier example.
        # !!!
        # Ashwin RJ non-iid
        # This experiment contains a custom update method that client uses
        # {
        #     'args': build_args(data_split = 'non-iid',
        #                        client_epoch=10,
        #                        comm_rounds=10,
        #                        frac=0.1,
        #                        prune_step=0.1,
        #                        acc_thresh=2,
        #                        batch_size=10,
        #                        num_clients=100,
        #                        avg_logic=None),
        #     'client': None,
        #     'server': None
        # },

        # !!! NOTE: This experiment still uses the old style specification. Adjust to resemble an earlier example.
        # !!!
        #  Ashwin RJ iid
        # {
        #     'args': build_args(data_split = 'iid',
        #                        client_epoch=10,
        #                        comm_rounds=10,
        #                        frac=0.1,
        #                        prune_step=0.1,
        #                        acc_thresh=2,
        #                        batch_size=10,
        #                        num_clients=100,
        #                        avg_logic=None),
        #     'client': None,
        #     'server': None
        # },

        # !!! NOTE: This experiment still uses the old style specification. Adjust to resemble an earlier example.
        # !!!
        # Fed Avg non-iid
        # {
        #     'args': build_args(data_split = 'non-iid',
        #                        client_epoch=10,
        #                        comm_rounds=10,
        #                        frac=0.1,
        #                        prune_step=0.1,
        #                        acc_thresh=2,
        #                        batch_size=10,
        #                        num_clients=100,
        #                        avg_logic='fed_avg'),
        #     'client': None,
        #     'server': None
        # },

        # Lottery FL non-iid
        # {
        #     'args': build_args(data_split = 'non-iid',
        #                        client_epoch=10,
        #                        comm_rounds=10,
        #                        frac=0.1,
        #                        prune_step=0.1,
        #                        acc_thresh=0.5,
        #                        batch_size=10,
        #                        num_clients=100,
        #                        avg_logic='lottery_fl_avg'),
        #     'client': None,
        #     'server': None
        # }
    }

    # To run 1 or more set selection
    selection = ['fed_avg_5_c_per_round_cifar',]
    run_experiments({k: experiments[k] for k in selection}, overrides)
